--lpm_decode CBX_DECLARE_ALL_CONNECTED_PORTS="OFF" DEVICE_FAMILY="Cyclone IV E" LPM_DECODES=11 LPM_WIDTH=4 data enable eq
--VERSION_BEGIN 14.0 cbx_cycloneii 2014:06:17:18:06:03:SJ cbx_lpm_add_sub 2014:06:17:18:06:03:SJ cbx_lpm_compare 2014:06:17:18:06:03:SJ cbx_lpm_decode 2014:06:17:18:06:03:SJ cbx_mgl 2014:06:17:18:10:38:SJ cbx_stratix 2014:06:17:18:06:03:SJ cbx_stratixii 2014:06:17:18:06:03:SJ  VERSION_END


-- Copyright (C) 1991-2014 Altera Corporation. All rights reserved.
--  Your use of Altera Corporation's design tools, logic functions 
--  and other software and tools, and its AMPP partner logic 
--  functions, and any output files from any of the foregoing 
--  (including device programming or simulation files), and any 
--  associated documentation or information are expressly subject 
--  to the terms and conditions of the Altera Program License 
--  Subscription Agreement, the Altera Quartus II License Agreement,
--  the Altera MegaCore Function License Agreement, or other 
--  applicable license agreement, including, without limitation, 
--  that your use is for the sole purpose of programming logic 
--  devices manufactured by Altera and sold by Altera or its 
--  authorized distributors.  Please refer to the applicable 
--  agreement for further details.



--synthesis_resources = lut 18 
SUBDESIGN decode_6ua
( 
	data[3..0]	:	input;
	enable	:	input;
	eq[10..0]	:	output;
) 
VARIABLE 
	data_wire[3..0]	: WIRE;
	enable_wire	: WIRE;
	eq_node[10..0]	: WIRE;
	eq_wire[15..0]	: WIRE;
	w_anode383w[1..0]	: WIRE;
	w_anode392w[3..0]	: WIRE;
	w_anode409w[3..0]	: WIRE;
	w_anode419w[3..0]	: WIRE;
	w_anode429w[3..0]	: WIRE;
	w_anode439w[3..0]	: WIRE;
	w_anode449w[3..0]	: WIRE;
	w_anode459w[3..0]	: WIRE;
	w_anode469w[3..0]	: WIRE;
	w_anode481w[1..0]	: WIRE;
	w_anode488w[3..0]	: WIRE;
	w_anode499w[3..0]	: WIRE;
	w_anode509w[3..0]	: WIRE;
	w_anode519w[3..0]	: WIRE;
	w_anode529w[3..0]	: WIRE;
	w_anode539w[3..0]	: WIRE;
	w_anode549w[3..0]	: WIRE;
	w_anode559w[3..0]	: WIRE;
	w_data381w[2..0]	: WIRE;

BEGIN 
	data_wire[] = data[];
	enable_wire = enable;
	eq[] = eq_node[];
	eq_node[10..0] = eq_wire[10..0];
	eq_wire[] = ( ( w_anode559w[3..3], w_anode549w[3..3], w_anode539w[3..3], w_anode529w[3..3], w_anode519w[3..3], w_anode509w[3..3], w_anode499w[3..3], w_anode488w[3..3]), ( w_anode469w[3..3], w_anode459w[3..3], w_anode449w[3..3], w_anode439w[3..3], w_anode429w[3..3], w_anode419w[3..3], w_anode409w[3..3], w_anode392w[3..3]));
	w_anode383w[] = ( (w_anode383w[0..0] & (! data_wire[3..3])), enable_wire);
	w_anode392w[] = ( (w_anode392w[2..2] & (! w_data381w[2..2])), (w_anode392w[1..1] & (! w_data381w[1..1])), (w_anode392w[0..0] & (! w_data381w[0..0])), w_anode383w[1..1]);
	w_anode409w[] = ( (w_anode409w[2..2] & (! w_data381w[2..2])), (w_anode409w[1..1] & (! w_data381w[1..1])), (w_anode409w[0..0] & w_data381w[0..0]), w_anode383w[1..1]);
	w_anode419w[] = ( (w_anode419w[2..2] & (! w_data381w[2..2])), (w_anode419w[1..1] & w_data381w[1..1]), (w_anode419w[0..0] & (! w_data381w[0..0])), w_anode383w[1..1]);
	w_anode429w[] = ( (w_anode429w[2..2] & (! w_data381w[2..2])), (w_anode429w[1..1] & w_data381w[1..1]), (w_anode429w[0..0] & w_data381w[0..0]), w_anode383w[1..1]);
	w_anode439w[] = ( (w_anode439w[2..2] & w_data381w[2..2]), (w_anode439w[1..1] & (! w_data381w[1..1])), (w_anode439w[0..0] & (! w_data381w[0..0])), w_anode383w[1..1]);
	w_anode449w[] = ( (w_anode449w[2..2] & w_data381w[2..2]), (w_anode449w[1..1] & (! w_data381w[1..1])), (w_anode449w[0..0] & w_data381w[0..0]), w_anode383w[1..1]);
	w_anode459w[] = ( (w_anode459w[2..2] & w_data381w[2..2]), (w_anode459w[1..1] & w_data381w[1..1]), (w_anode459w[0..0] & (! w_data381w[0..0])), w_anode383w[1..1]);
	w_anode469w[] = ( (w_anode469w[2..2] & w_data381w[2..2]), (w_anode469w[1..1] & w_data381w[1..1]), (w_anode469w[0..0] & w_data381w[0..0]), w_anode383w[1..1]);
	w_anode481w[] = ( (w_anode481w[0..0] & data_wire[3..3]), enable_wire);
	w_anode488w[] = ( (w_anode488w[2..2] & (! w_data381w[2..2])), (w_anode488w[1..1] & (! w_data381w[1..1])), (w_anode488w[0..0] & (! w_data381w[0..0])), w_anode481w[1..1]);
	w_anode499w[] = ( (w_anode499w[2..2] & (! w_data381w[2..2])), (w_anode499w[1..1] & (! w_data381w[1..1])), (w_anode499w[0..0] & w_data381w[0..0]), w_anode481w[1..1]);
	w_anode509w[] = ( (w_anode509w[2..2] & (! w_data381w[2..2])), (w_anode509w[1..1] & w_data381w[1..1]), (w_anode509w[0..0] & (! w_data381w[0..0])), w_anode481w[1..1]);
	w_anode519w[] = ( (w_anode519w[2..2] & (! w_data381w[2..2])), (w_anode519w[1..1] & w_data381w[1..1]), (w_anode519w[0..0] & w_data381w[0..0]), w_anode481w[1..1]);
	w_anode529w[] = ( (w_anode529w[2..2] & w_data381w[2..2]), (w_anode529w[1..1] & (! w_data381w[1..1])), (w_anode529w[0..0] & (! w_data381w[0..0])), w_anode481w[1..1]);
	w_anode539w[] = ( (w_anode539w[2..2] & w_data381w[2..2]), (w_anode539w[1..1] & (! w_data381w[1..1])), (w_anode539w[0..0] & w_data381w[0..0]), w_anode481w[1..1]);
	w_anode549w[] = ( (w_anode549w[2..2] & w_data381w[2..2]), (w_anode549w[1..1] & w_data381w[1..1]), (w_anode549w[0..0] & (! w_data381w[0..0])), w_anode481w[1..1]);
	w_anode559w[] = ( (w_anode559w[2..2] & w_data381w[2..2]), (w_anode559w[1..1] & w_data381w[1..1]), (w_anode559w[0..0] & w_data381w[0..0]), w_anode481w[1..1]);
	w_data381w[2..0] = data_wire[2..0];
END;
--VALID FILE
